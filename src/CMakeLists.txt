# Boost
SET(Boost_ADDITIONAL_VERSIONS "1.48" "1.48.0")
FIND_PATH(Boost_LOCAL NAMES boost/config.hpp PATHS "${CMAKE_CURRENT_SOURCE_DIR}/../include" NO_DEFAULT_PATH)
if (Boost_LOCAL)
	SET(BOOST_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/../include")
	find_package(Boost 1.48.0)
endif()
if (NOT Boost_FOUND)
	message(STATUS "Did not find Boost locally; trying globally...")
	message(STATUS "If this doesn't work, set envvar BOOST_ROOT or run ./get-boost.sh and try again.")
	find_package(Boost 1.48.0 REQUIRED)
endif()
if(Boost_FOUND)
	if (Boost_VERSION VERSION_LESS "104800")
		unset(Boost_FOUND CACHE)
		unset(Boost_INCLUDE_DIRS CACHE)
		unset(Boost_LIBRARIES CACHE)
		message(FATAL_ERROR "Boost is too old - ${Boost_VERSION} was found, but benchmarks requires 1.48.0 or newer")
	endif ()
	include_directories(${Boost_INCLUDE_DIRS})
	link_directories(${Boost_LIBRARY_DIRS})
	add_definitions(-DHAVE_BOOST=1)
	message(STATUS "Found Boost version ${Boost_VERSION}")
endif()

macro(benchmarks_link target)
	target_link_libraries(${target} ${Boost_LIBRARIES})
endmacro()

ADD_EXECUTABLE(s-set set.cpp)
benchmarks_link(s-set)
